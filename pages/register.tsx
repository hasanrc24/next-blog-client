import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import React, { useState } from "react";
import { API_URL } from "../config/config";
import { setUserCookie } from "../config/auth";
import { useRouter } from "next/router";
import { useDispatch } from "react-redux";
import { userInfo } from "../redux/userSlice";
import { verifyUser } from "../config/auth";

const Register = () => {
  const router = useRouter();
  const dispatch = useDispatch();
  const [error, setError] = useState("");
  const [userData, setUserData] = useState({
    firstname: "",
    lastname: "",
    username: "",
    email: "",
    password: "",
  });
  const handleChange = (e: any) => {
    setUserData({
      ...userData,
      [e.target.name]: e.target.value,
    });
  };
  const handleRegister = async (e: any) => {
    e.preventDefault();

    try {
      const responseData = await axios.post(
        `${API_URL}/api/auth/local/register`,
        {
          firstName: userData.firstname,
          lastName: userData.lastname,
          username: userData.username,
          email: userData.email,
          password: userData.password,
        }
      );
      setUserCookie(responseData.data);
      (await verifyUser()) &&
        (dispatch(userInfo(responseData.data)), router.push("/"));
    } catch (error) {
      console.log(error);
      if (axios.isAxiosError(error)) {
        setError(error.response?.data.error.message);
        setTimeout(() => {
          setError("");
        }, 2000);
      }
    }
  };
  return (
    <div className="mx-auto login-comp my-5">
      <Head>
        <title>Next Blog | Sign up</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h4 className="mb-3">Sign up</h4>
      <form onSubmit={handleRegister}>
        <div className="form-outline mb-4 d-flex gap-3">
          <input
            type="text"
            placeholder="First name"
            name="firstname"
            className="form-control w-50"
            onChange={handleChange}
            value={userData.firstname}
          />
          <input
            type="text"
            placeholder="Last name"
            name="lastname"
            className="form-control w-50"
            onChange={handleChange}
            value={userData.lastname}
          />
        </div>
        <div className="form-outline mb-4">
          <input
            type="text"
            placeholder="Username"
            name="username"
            className="form-control"
            onChange={handleChange}
            value={userData.username}
          />
        </div>
        <div className="form-outline mb-4">
          <input
            type="email"
            placeholder="Your email"
            name="email"
            className="form-control"
            onChange={handleChange}
            value={userData.email}
          />
        </div>
        <div className="form-outline mb-4">
          <input
            type="password"
            name="password"
            placeholder="Password"
            className="form-control"
            onChange={handleChange}
            value={userData.password}
          />
        </div>

        <button type="submit" className="btn btn-paginate mb-4">
          Sign up
        </button>

        <div className="text-center">
          <p>
            Already have an account? <Link href="/login">Log in</Link>
          </p>
        </div>
      </form>
      {error && <p className="text-center">{error}</p>}
    </div>
  );
};

export default Register;
