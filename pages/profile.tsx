import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import { getTokenFromServerCookie } from "../config/auth";
import { API_URL } from "../config/config";
import { userInfo } from "../redux/userSlice";

const Profile = ({ data, jwt }: any) => {
  const dispatch = useDispatch();
  const router = useRouter();
  const [loading, setLoading] = useState(false);
  const [edit, setEdit] = useState(false);
  const [imageData, setImageData] = useState<any>(null);
  const {
    firstName,
    lastName,
    username,
    email,
    avatar,
    phone,
    address,
    id,
    articles,
  } = data;

  const [editProfile, setEditProfile] = useState({
    firstName: firstName,
    lastName: lastName,
    email: email,
    phone: phone,
    address: address,
  });

  useEffect(() => {
    dispatch(userInfo(data));
  }, []);
  const handleProfileEdit = () => {
    setEdit(true);
  };
  const handleImageSelect = (e: any) => {
    const tempImg = e.target.files[0];
    setImageData(tempImg);
  };
  const handleSave = async () => {
    setLoading(true);
    const formData = new FormData();
    const file = imageData;
    formData.append("inputFile", file);
    formData.append("user_id", data.id);
    if (file !== null) {
      try {
        const response = await fetch("/api/upload", {
          method: "POST",
          body: formData,
        });
        const responseData = await response.json();
        if (responseData.message === "success") {
          setLoading(false);
          router.reload();
        }
      } catch (error) {
        console.error(JSON.stringify(error));
        setLoading(false);
      }
    }
    try {
      const res = await axios.put(`${API_URL}/api/users/${id}`, editProfile, {
        headers: {
          Authorization: `Bearer ${jwt}`,
        },
      });
      if (res.status === 200) {
        setLoading(false);
        router.reload();
      }
    } catch (error) {
      console.error(JSON.stringify(error));
      setLoading(false);
    }
    setEdit(false);
  };

  const editOnChange = (e: any) => {
    setEditProfile({ ...editProfile, [e.target.name]: e.target.value });
  };
  return (
    <>
      <Head>
        <title>Next Blog | {firstName + " " + lastName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section>
        <div className="container py-5">
          <div className="row">
            <div className="col-lg-4">
              <div className="card mb-4">
                <div className="card-body text-center">
                  <div className="prof-img-div">
                    {avatar === null || avatar === "default" ? (
                      <img
                        src="R.png"
                        alt="avatar"
                        className="img-fluid"
                        height={100}
                        width={100}
                      />
                    ) : (
                      <img
                        src={`https://res.cloudinary.com/dnqvwwxzv/image/upload/${avatar}`}
                        alt={username}
                        height={100}
                        width={100}
                      />
                    )}
                  </div>
                  <h5 className="my-3">{firstName + " " + lastName}</h5>
                  <p className="text-muted mb-1">@{username}</p>
                  <p className="text-muted mb-4">{address}</p>
                  <div className="d-flex justify-content-center mb-2"></div>
                </div>
              </div>
              <div className=" mb-4 mb-lg-0">
                {edit ? (
                  <div className="">
                    <label className="form-label" htmlFor="customFile">
                      Choose a photo to upload
                    </label>
                    <input
                      type="file"
                      className="form-control"
                      id="customFile"
                      onChange={handleImageSelect}
                    />
                    <button
                      className={`btn res-nav-btn mt-3 ${
                        loading && "disabled"
                      }`}
                      type="submit"
                      onClick={handleSave}
                    >
                      Save
                      {loading && (
                        <div
                          className="spinner-border spinner-border-sm ms-2"
                          role="status"
                        ></div>
                      )}
                    </button>
                    <button
                      className="btn ms-2 res-nav-btn mt-3"
                      onClick={() => setEdit(false)}
                    >
                      Cancel
                    </button>
                  </div>
                ) : (
                  <button
                    className="btn res-nav-btn"
                    onClick={handleProfileEdit}
                  >
                    Edit profile
                  </button>
                )}
              </div>
            </div>
            <div className="col-lg-8">
              <div className="card mb-4">
                <div className="card-body">
                  <div className="row">
                    <div className="col-sm-3">
                      <p className="mb-0">Full Name</p>
                    </div>
                    <div className="col-sm-9">
                      {edit ? (
                        <div className="d-flex gap-3">
                          <input
                            type="text"
                            name="firstName"
                            className="form-control w-50"
                            value={editProfile.firstName}
                            onChange={editOnChange}
                          />
                          <input
                            type="text"
                            name="lastName"
                            className="form-control w-50"
                            value={editProfile.lastName}
                            onChange={editOnChange}
                          />
                        </div>
                      ) : (
                        <p className="text-muted mb-0">
                          {firstName + " " + lastName}
                        </p>
                      )}
                    </div>
                  </div>
                  <hr />
                  <div className="row">
                    <div className="col-sm-3">
                      <p className="mb-0">Email</p>
                    </div>
                    <div className="col-sm-9">
                      {edit ? (
                        <input
                          type="email"
                          name="email"
                          className="form-control"
                          value={editProfile.email}
                          onChange={editOnChange}
                        />
                      ) : (
                        <p className="text-muted mb-0">{email}</p>
                      )}
                    </div>
                  </div>
                  <hr />
                  <div className="row">
                    <div className="col-sm-3">
                      <p className="mb-0">Phone</p>
                    </div>
                    <div className="col-sm-9">
                      {edit ? (
                        <input
                          type="text"
                          name="phone"
                          className="form-control"
                          value={editProfile.phone}
                          onChange={editOnChange}
                        />
                      ) : (
                        <p className="text-muted mb-0">{phone}</p>
                      )}
                    </div>
                  </div>
                  <hr />
                  <div className="row">
                    <div className="col-sm-3">
                      <p className="mb-0">Address</p>
                    </div>
                    <div className="col-sm-9">
                      {edit ? (
                        <input
                          type="text"
                          name="address"
                          className="form-control"
                          value={editProfile.address}
                          onChange={editOnChange}
                        />
                      ) : (
                        <p className="text-muted mb-0">{address}</p>
                      )}
                    </div>
                  </div>
                </div>
              </div>
              <div className="row">
                <div className="col-md-12">
                  <div className="card mb-4 mb-md-0">
                    <div className="card-body">
                      <h5 className="mb-4 fw-bold">My Articles</h5>
                      <hr />
                      {articles.length > 0 ? (
                        articles?.map((curArt: any) => {
                          const { id, title, slug } = curArt;
                          return (
                            <div
                              key={id}
                              className="pb-3"
                              style={{ fontWeight: "500" }}
                            >
                              <Link
                                href={`/article/${slug}`}
                                className="my-articles"
                              >
                                {title}
                              </Link>
                            </div>
                          );
                        })
                      ) : (
                        <>
                          <p>You didn&apos;t post any article yet.</p>
                        </>
                      )}
                      <Link href="/createArticle" className="btn sub-btn">
                        Post an article
                      </Link>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Profile;

export const getServerSideProps = async ({ req }: any) => {
  const serverJwt = getTokenFromServerCookie(req);
  if (!serverJwt) {
    return {
      redirect: {
        destination: "/login",
      },
    };
  }
  if (serverJwt) {
    const res = await fetch(`${API_URL}/api/users/me?populate=*`, {
      headers: {
        Authorization: `Bearer ${serverJwt}`,
      },
    });
    const verifiedUser = await res.json();
    return {
      props: {
        data: verifiedUser,
        jwt: serverJwt,
      },
    };
  } else {
    return {
      props: { data: "error" },
    };
  }
};
