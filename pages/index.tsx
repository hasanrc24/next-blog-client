import { GetServerSideProps } from "next";
import Head from "next/head";
import { fetArticles, fetchCategories } from "../http";
import { AxiosResponse } from "axios";
import { Category, CollectionTypes, Article, Pagination } from "../types";
import Categories from "../components/Categories";
import Articles from "../components/Articles";
import qs from "qs";
import Paginate from "../components/Paginate";

interface propsType {
  categories: Category[];
  articles: {
    items: Article[];
    pagination: Pagination;
  };
}
export default function Home({ categories, articles }: propsType) {
  const handleSearch = (e: any) => {
    console.log(e.target.value);
  };
  return (
    <div>
      <Head>
        <title>Next Blog | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Categories categories={categories} handleSearch={handleSearch} />
      <Articles articles={articles.items} />
      <Paginate
        page={articles.pagination.page}
        pageCount={articles.pagination.pageCount}
      />
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const options = {
    populate: ["author.avatar"],
    sort: ["id:desc"],
    pagination: {
      page: query.page ? query.page : 1,
      pageSize: 10,
    },
  };
  const queryString = qs.stringify(options);

  const { data: cateogry }: AxiosResponse<CollectionTypes<Category[]>> =
    await fetchCategories();

  const { data: articles }: AxiosResponse<CollectionTypes<Article[]>> =
    await fetArticles(queryString);

  return {
    props: {
      categories: cateogry.data,
      articles: {
        items: articles.data,
        pagination: articles.meta.pagination,
      },
    },
  };
};
